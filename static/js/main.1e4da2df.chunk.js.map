{"version":3,"sources":["Calculator/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["current","Calculator","props","state","currentValue","previousVal","formula","clickHandler","bind","deleteHandler","decimalHandler","formulaHandler","equalHandler","e","push","target","value","this","setState","console","log","stringify","math","id","className","onClick","type","length","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1e4da2df.chunk.js","sourcesContent":["\r\nimport React, {Component } from 'react';\r\nimport './Calculator.css';\r\nimport * as math from 'mathjs';\r\n\r\nvar current = [0];\r\nvar stringify \r\nclass Calculator extends React.Component{\r\n\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n    currentValue: '',\r\n    previousVal: '0',\r\n     formula: ''   \r\n\r\n\r\n      };\r\n      this.clickHandler = this.clickHandler.bind(this)\r\n      this.deleteHandler = this.deleteHandler.bind(this)\r\n      this.decimalHandler = this.decimalHandler.bind(this)\r\n\r\n      this.formulaHandler=this.formulaHandler.bind(this)\r\n      this.equalHandler = this.equalHandler.bind(this)\r\n    }\r\n\r\n    clickHandler(e){\r\n        \r\n        current.push(e.target.value) \r\n   \r\n        this.setState( {\r\n           currentValue: this.state.currentValue + e.target.value,\r\n          // currentValue: parseInt(current.join('')),\r\n           //previousVal: parseInt(current.join('')),\r\n          });\r\n \r\n\r\n          \r\n\r\nconsole.log('current ' + current)\r\nconsole.log('state ' + this.state.currentValue)\r\nconsole.log('xxx ' + stringify)\r\n\r\n\r\n    }\r\n\r\n\r\n    equalHandler(){\r\n        this.setState( {\r\n           \r\n            currentValue: math.evaluate(this.state.currentValue)\r\n          });\r\n          current.push(math.evaluate(this.state.currentValue))\r\n          console.log('pushed');\r\n          console.log('x curent ' + current)\r\n          console.log('xx state xx ' + this.state.currentValue)\r\n    }\r\n\r\n    formulaHandler(e){\r\n        this.setState( {\r\n           \r\n            formula: e.target.value\r\n          });\r\n        \r\n         \r\n          \r\n    }\r\n\r\n\r\n\r\n    decimalHandler(){\r\n        this.setState( {\r\n           \r\n\r\n          });\r\n        \r\n          console.log(this.state.currentValue)\r\n          \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        deleteHandler(e){\r\n        this.setState( {\r\n            currentValue: '',\r\n           \r\n    \r\n          });\r\n          current= [0]\r\n          \r\n    }\r\n\r\n\r\n\r\n\r\nrender(){\r\n    \r\n    return(\r\n        <div >\r\n            <div id='main'>\r\n\r\n            \r\n\r\n\r\n\r\n\r\n            <div id='nums' >\r\n          \r\n            \r\n            <button className=\"numFormat\" onClick = {this.clickHandler} type=\"button\" id=\"seven\" value='7' >7</button>\r\n            <button className=\"numFormat\" onClick = {this.clickHandler}  type=\"button\" id=\"eight\" value='8' >8</button>\r\n            <button className=\"numFormat\" onClick = {this.clickHandler} type=\"button\" id=\"nine\" value='9' >9</button>\r\n           \r\n            <button className=\"numFormat\" onClick = {this.clickHandler}  type=\"button\" id=\"four\" value='4' >4</button>\r\n            <button className=\"numFormat\" onClick = {this.clickHandler}  type=\"button\" id=\"five\" value='5' >5</button>\r\n            <button className=\"numFormat\" onClick = {this.clickHandler}  type=\"button\" id=\"six\" value='6' >6</button>\r\n\r\n            <button className=\"numFormat\"  onClick = {this.clickHandler} type=\"button\" id=\"one\" value='1' >1</button>\r\n            <button className=\"numFormat\"  onClick = {this.clickHandler} type=\"button\" id=\"two\" value='2' >2</button>\r\n            <button className=\"numFormat\" onClick = {this.clickHandler}  type=\"button\" id=\"three\" value='3' >3</button>\r\n            </div>\r\n\r\n\r\n\r\n            <button className=\"zero\"  type=\"button\" id=\"zero\" value='0' onClick = {this.clickHandler} >0</button>\r\n\r\n\r\n            <div id='calcButtons'>\r\n            <button className=\"numFormat\"  onClick = {this.clickHandler} type=\"button\" id=\"divide\" value='/'  >/</button>\r\n             \r\n            <button className=\"numFormat\" onClick = {this.clickHandler} type=\"button\" id=\"multiply\" value='*'   >*</button>\r\n \r\n            <button className=\"numFormat\" onClick = {this.clickHandler} type=\"button\" id=\"subtract\" value='-'  >-</button>\r\n\r\n            <button className=\"numFormat\" onClick = {this.clickHandler}  type=\"button\"  id=\"add\" value='+'  >+</button>\r\n\r\n            <button className=\"numFormat\" onClick = {this.clickHandler}  type=\"button\"   id=\"decimal\" value='.'  >.</button>\r\n\r\n            <button className=\"numFormat\" onClick={this.deleteHandler}  type=\"button\"    id=\"clear\" value='AC' >AC</button>\r\n            <button type=\"button\"  onClick = {this.equalHandler} id=\"equals\" value='=' >=</button>\r\n            \r\n    <div id=\"display\">   {current[current.length-1]} </div>\r\n    <div id=\"display2\">{this.state.currentValue} </div>\r\n            </div>\r\n            </div>\r\n\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\n\r\nexport default Calculator\r\n\r\n","import React from 'react';\nimport Calculator from './Calculator/Calculator'\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n\n\n<Calculator/>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}